name: Update

on:
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.collect.outputs.updated }}
      cache-key: ${{ steps.collect.outputs.cache-key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run update script
        run: node update.mjs

      - name: Collect updated directories
        id: collect
        run: |
            directories=$(git diff --name-only --staged | xargs -n1 dirname | sort -u)
            json=$(echo "$directories" | jq -R . | jq -s 'map(select(length > 0))')
            echo "updated=$(echo "$json" | jq -c)" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: updates
          path: issuers
          retention-days: 1

      - run: git status

  prs:
    name: Update ${{ matrix.dir }}
    runs-on: ubuntu-latest
    needs: update
    strategy:
      matrix:
        dir: ${{ fromJSON(needs.update.outputs.updated) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - uses: actions/download-artifact@v4
        with:
          name: updates
          path: issuers
          merge-multiple: true

      - uses: panva/create-or-update-pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: ${{ matrix.dir }}
          title: Update ${{ matrix.dir }}
          body:
          branch: update-${{ matrix.dir }}
          commit-message: Update ${{ matrix.dir }}
          auto-merge: squash
          update-pull-request-title-and-body: false
